#define NUMBITS 4
#define PLAYSOUND
#define DEBUG

#define TABLE_SIZE 360
#define AMPLITUDE 8

int sinLookupTable[TABLE_SIZE];

uint8_t pins[NUMBITS] = {2, 3, 4, 5};

enum waves {SAWTOOTH=0, SIN=1, SQUARE=2, TRIANGLE=3};
enum waves wave = SAWTOOTH;
uint8_t sawtoothWave[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
uint8_t squareWave[] = {0, 15};
uint8_t triangleWave[] = {
  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,
  15,14,13,12,11,10,9,8,7,6,5,4,3,2,1
};

void generateSinLookupTable();
int getSinValue(int phase);
void updatePhase();

void setup() {
  // 4 bit resolution:
  // 16 possible vals
  Serial.begin(9600);
  DDRB = DDRB | 0b1111;
}


void loop() {
  
  //startTime = micros();
  // put your main code here, to run repeatedly:
  /*switch (wave) {
    case SAWTOOTH:
      break;
    case SIN:
      break;
    case SQUARE:
      break;
    case TRIANGLE:
      break;
    //default;
    */
    updatePhase();
    int sinValue = getSinValue();
    setSpeaker(sinValue);
    //Serial.print("s:");
    //Serial.println(sinWave[i]);
    delay(10);
  //prevTime = startTime;
  //delayMicroseconds(curTime - )

  // check if time for note passed 
  // If so, set note 
}

/* Function generated by CHATGPT, fills lookup table at startup */
/* Might be slightly faster to have the lookup table prefilled but that would look kind of weird. */
void generateSinLookupTable() {
  for (int i = 0; i < TABLE_SIZE; i++) {
    float radian = i * M_PI / 180.0;
    sinLookupTable[i] = (int)(sin(radian) * AMPLITUDE) + AMPLITUDE;
  }
}

// also generated by chatgpt after getting it to fix code
int getSinValue(currentPhase) {
  // Increment the phase
  return sinLookupTable[currentPhase];
}

unsigned int updateReturnPhase() {
  unsigned long currentTime = millis();
  unsigned long elapsedTime = currentTime - lastUpdateTime;

  // Calculate phase increment based on frequency
  phaseIncrement = (360.0 * BASE_FREQUENCY * elapsedTime) / 1000.0;

    int currentPhase = (phaseIncrement + currentPhase) % TABLE_SIZE;
  // Update last update time
  lastUpdateTime = currentTime;
}

void setSpeaker(uint8_t position) {
  PORTB = position & 0b1111;
}